-------------------------------------------------------------------------------
--! Roblox Script with Platoboost Integration
--! Complete Platoboost Library with Working GUI

-------------------------------------------------------------------------------
--! json library
--! cryptography library
local a=2^32;local b=a-1;local function c(d,e)local f,g=0,1;while d~=0 or e~=0 do local h,i=d%2,e%2;local j=(h+i)%2;f=f+j*g;d=math.floor(d/2)e=math.floor(e/2)g=g*2 end;return f%a end;local function k(d,e,l,...)local m;if e then d=d%a;e=e%a;m=c(d,e)if l then m=k(m,l,...)end;return m elseif d then return d%a else return 0 end end;local function n(d,e,l,...)local m;if e then d=d%a;e=e%a;m=(d+e-c(d,e))/2;if l then m=n(m,l,...)end;return m elseif d then return d%a else return b end end;local function o(p)return b-p end;local function q(d,r)if r<0 then return lshift(d,-r)end;return math.floor(d%2^32/2^r)end;local function s(p,r)if r>31 or r<-31 then return 0 end;return q(p%a,r)end;local function lshift(d,r)if r<0 then return s(d,-r)end;return d*2^r%2^32 end;local function t(p,r)p=p%a;r=r%32;local u=n(p,2^r-1)return s(p,r)+lshift(u,32-r)end;local v={0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0x0fc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x06ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2}local function w(x)return string.gsub(x,".",function(l)return string.format("%02x",string.byte(l))end)end;local function y(z,A)local x=""for B=1,A do local C=z%256;x=string.char(C)..x;z=(z-C)/256 end;return x end;local function D(x,B)local A=0;for B=B,B+3 do A=A*256+string.byte(x,B)end;return A end;local function E(F,G)local H=64-(G+9)%64;G=y(8*G,8)F=F.."\128"..string.rep("\0",H)..G;assert(#F%64==0)return F end;local function I(J)J[1]=0x6a09e667;J[2]=0xbb67ae85;J[3]=0x3c6ef372;J[4]=0xa54ff53a;J[5]=0x510e527f;J[6]=0x9b05688c;J[7]=0x1f83d9ab;J[8]=0x5be0cd19;return J end;local function K(F,B,J)local L={}for M=1,16 do L[M]=D(F,B+(M-1)*4)end;for M=17,64 do local N=L[M-15]local O=k(t(N,7),t(N,18),s(N,3))N=L[M-2]L[M]=(L[M-16]+O+L[M-7]+k(t(N,17),t(N,19),s(N,10)))%a end;local d,e,l,P,Q,R,S,T=J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8]for B=1,64 do local O=k(t(d,2),t(d,13),t(d,22))local U=k(n(d,e),n(d,l),n(e,l))local V=(O+U)%a;local W=k(t(Q,6),t(Q,11),t(Q,25))local X=k(n(Q,R),n(o(Q),S))local Y=(T+W+X+v[B]+L[B])%a;T=S;S=R;R=Q;Q=(P+Y)%a;P=l;l=e;e=d;d=(Y+V)%a end;J[1]=(J[1]+d)%a;J[2]=(J[2]+e)%a;J[3]=(J[3]+l)%a;J[4]=(J[4]+P)%a;J[5]=(J[5]+Q)%a;J[6]=(J[6]+R)%a;J[7]=(J[7]+S)%a;J[8]=(J[8]+T)%a end;local function Z(F)F=E(F,#F)local J=I({})for B=1,#F,64 do K(F,B,J)end;return w(y(J[1],4)..y(J[2],4)..y(J[3],4)..y(J[4],4)..y(J[5],4)..y(J[6],4)..y(J[7],4)..y(J[8],4))end;local e;local l={["\\"]="\\",["\""]="\"",["\b"]="b",["\f"]="f",["\n"]="n",["\r"]="r",["\t"]="t"}local P={["/"]="/"}for Q,R in pairs(l)do P[R]=Q end;local S=function(T)return"\\"..(l[T]or string.format("u%04x",T:byte()))end;local B=function(M)return"null"end;local v=function(M,z)local _={}z=z or{}if z[M]then error("circular reference")end;z[M]=true;if rawget(M,1)~=nil or next(M)==nil then local A=0;for Q in pairs(M)do if type(Q)~="number"then error("invalid table: mixed or invalid key types")end;A=A+1 end;if A~=#M then error("invalid table: sparse array")end;for a0,R in ipairs(M)do table.insert(_,e(R,z))end;z[M]=nil;return"["..table.concat(_,",").."]"else for Q,R in pairs(M)do if type(Q)~="string"then error("invalid table: mixed or invalid key types")end;table.insert(_,e(Q,z)..":"..e(R,z))end;z[M]=nil;return"{"..table.concat(_,",").."}"end end;local g=function(M)return'"'..M:gsub('[%z\1-\31\\"]',S)..'"'end;local a1=function(M)if M~=M or M<=-math.huge or M>=math.huge then error("unexpected number value '"..tostring(M).."'")end;return string.format("%.14g",M)end;local j={["nil"]=B,["table"]=v,["string"]=g,["number"]=a1,["boolean"]=tostring}e=function(M,z)local x=type(M)local a2=j[x]if a2 then return a2(M,z)end;error("unexpected type '"..x.."'")end;local a3=function(M)return e(M)end;local a4;local N=function(...)local _={}for a0=1,select("#",...)do _[select(a0,...)]=true end;return _ end;local L=N(" ","\t","\r","\n")local p=N(" ","\t","\r","\n","]","}",",")local a5=N("\\","/",'"',"b","f","n","r","t","u")local m=N("true","false","null")local a6={["true"]=true,["false"]=false,["null"]=nil}local a7=function(a8,a9,aa,ab)for a0=a9,#a8 do if aa[a8:sub(a0,a0)]~=ab then return a0 end end;return#a8+1 end;local ac=function(a8,a9,J)local ad=1;local ae=1;for a0=1,a9-1 do ae=ae+1;if a8:sub(a0,a0)=="\n"then ad=ad+1;ae=1 end end;error(string.format("%s at line %d col %d",J,ad,ae))end;local af=function(A)local a2=math.floor;if A<=0x7f then return string.char(A)elseif A<=0x7ff then return string.char(a2(A/64)+192,A%64+128)elseif A<=0xffff then return string.char(a2(A/4096)+224,a2(A%4096/64)+128,A%64+128)elseif A<=0x10ffff then return string.char(a2(A/262144)+240,a2(A%262144/4096)+128,a2(A%4096/64)+128,A%64+128)end;error(string.format("invalid unicode codepoint '%x'",A))end;local ag=function(ah)local ai=tonumber(ah:sub(1,4),16)local aj=tonumber(ah:sub(7,10),16)if aj then return af((ai-0xd800)*0x400+aj-0xdc00+0x10000)else return af(ai)end end;local ak=function(a8,a0)local _=""local al=a0+1;local Q=al;while al<=#a8 do local am=a8:byte(al)if am<32 then ac(a8,al,"control character in string")elseif am==92 then _=_..a8:sub(Q,al-1)al=al+1;local T=a8:sub(al,al)if T=="u"then local an=a8:match("^[dD][89aAbB]%x%x\\u%x%x%x%x",al+1)or a8:match("^%x%x%x%x",al+1)or ac(a8,al-1,"invalid unicode escape in string")_=_..ag(an)al=al+#an else if not a5[T]then ac(a8,al-1,"invalid escape char '"..T.."' in string")end;_=_..P[T]end;Q=al+1 elseif am==34 then _=_..a8:sub(Q,al-1)return _,al+1 end;al=al+1 end;ac(a8,a0,"expected closing quote for string")end;local ao=function(a8,a0)local am=a7(a8,a0,p)local ah=a8:sub(a0,am-1)local A=tonumber(ah)if not A then ac(a8,a0,"invalid number '"..ah.."'")end;return A,am end;local ap=function(a8,a0)local am=a7(a8,a0,p)local aq=a8:sub(a0,am-1)if not m[aq]then ac(a8,a0,"invalid literal '"..aq.."'")end;return a6[aq],am end;local ar=function(a8,a0)local _={}local A=1;a0=a0+1;while 1 do local am;a0=a7(a8,a0,L,true)if a8:sub(a0,a0)=="]"then a0=a0+1;break end;am,a0=a4(a8,a0)_[A]=am;A=A+1;a0=a7(a8,a0,L,true)local as=a8:sub(a0,a0)a0=a0+1;if as=="]"then break end;if as~=","then ac(a8,a0,"expected ']' or ','")end end;return _,a0 end;local at=function(a8,a0)local _={}a0=a0+1;while 1 do local au,M;a0=a7(a8,a0,L,true)if a8:sub(a0,a0)=="}"then a0=a0+1;break end;if a8:sub(a0,a0)~='"'then ac(a8,a0,"expected string for key")end;au,a0=a4(a8,a0)a0=a7(a8,a0,L,true)if a8:sub(a0,a0)~=":"then ac(a8,a0,"expected ':' after key")end;a0=a7(a8,a0+1,L,true)M,a0=a4(a8,a0)_[au]=M;a0=a7(a8,a0,L,true)local as=a8:sub(a0,a0)a0=a0+1;if as=="}"then break end;if as~=","then ac(a8,a0,"expected '}' or ','")end end;return _,a0 end;local av={['"']=ak,["0"]=ao,["1"]=ao,["2"]=ao,["3"]=ao,["4"]=ao,["5"]=ao,["6"]=ao,["7"]=ao,["8"]=ao,["9"]=ao,["-"]=ao,["t"]=ap,["f"]=ap,["n"]=ap,["["]=ar,["{"]=at}a4=function(a8,a9)local as=a8:sub(a9,a9)local a2=av[as]if a2 then return a2(a8,a9)end;ac(a8,a9,"unexpected character '"..as.."'")end;local aw=function(a8)if type(a8)~="string"then error("expected argument of type string, got "..type(a8))end;local _,a9=a4(a8,a7(a8,1,L,true))a9=a7(a8,a9,L,true)if a9<=#a8 then ac(a8,a9,"trailing garbage")end;return _ end;
local lEncode, lDecode, lDigest = a3, aw, Z;
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
--! platoboost library

--! configuration
local service = 5683;  -- your service id, this is used to identify your service.
local secret = "1e88032b-e163-4a76-81db-c59c8337b38c";  -- make sure to obfuscate this if you want to ensure security.
local useNonce = true;  -- use a nonce to prevent replay attacks and request tampering.

--! callbacks
local onMessage = function(message) end;

--! wait for game to load
repeat task.wait(1) until game:IsLoaded();

--! functions
local requestSending = false;
local fSetClipboard, fRequest, fStringChar, fToString, fStringSub, fOsTime, fMathRandom, fMathFloor, fGetHwid = setclipboard or toclipboard, request or http_request or syn_request, string.char, tostring, string.sub, os.time, math.random, math.floor, gethwid or function() return game:GetService("Players").LocalPlayer.UserId end
local cachedLink, cachedTime = "", 0;

--! pick host
local host = "https://api.platoboost.com";
local hostResponse = fRequest({
    Url = host .. "/public/connectivity",
    Method = "GET"
});
if hostResponse.StatusCode ~= 200 or hostResponse.StatusCode ~= 429 then
    host = "https://api.platoboost.net";
end

--!optimize 2
function cacheLink()
    if cachedTime + (10*60) < fOsTime() then
        local response = fRequest({
            Url = host .. "/public/start",
            Method = "POST",
            Body = lEncode({
                service = service,
                identifier = lDigest(fGetHwid())
            }),
            Headers = {
                ["Content-Type"] = "application/json"
            }
        });

        if response.StatusCode == 200 then
            local decoded = lDecode(response.Body);

            if decoded.success == true then
                cachedLink = decoded.data.url;
                cachedTime = fOsTime();
                return true, cachedLink;
            else
                onMessage(decoded.message);
                return false, decoded.message;
            end
        elseif response.StatusCode == 429 then
            local msg = "you are being rate limited, please wait 20 seconds and try again.";
            onMessage(msg);
            return false, msg;
        end

        local msg = "Failed to cache link.";
        onMessage(msg);
        return false, msg;
    else
        return true, cachedLink;
    end
end

cacheLink();

--!optimize 2
local generateNonce = function()
    local str = ""
    for _ = 1, 16 do
        str = str .. fStringChar(fMathFloor(fMathRandom() * (122 - 97 + 1)) + 97)
    end
    return str
end

--!optimize 1
for _ = 1, 5 do
    local oNonce = generateNonce();
    task.wait(0.2)
    if generateNonce() == oNonce then
        local msg = "platoboost nonce error.";
        onMessage(msg);
        error(msg);
    end
end

--!optimize 2
local copyLink = function()
    local success, link = cacheLink();
    
    if success then
        fSetClipboard(link);
    end
end

--!optimize 2
local redeemKey = function(key)
    local nonce = generateNonce();
    local endpoint = host .. "/public/redeem/" .. fToString(service);

    local body = {
        identifier = lDigest(fGetHwid()),
        key = key
    }

    if useNonce then
        body.nonce = nonce;
    end

    local response = fRequest({
        Url = endpoint,
        Method = "POST",
        Body = lEncode(body),
        Headers = {
            ["Content-Type"] = "application/json"
        }
    });

    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);

        if decoded.success == true then
            if decoded.data.valid == true then
                if useNonce then
                    if decoded.data.hash == lDigest("true" .. "-" .. nonce .. "-" .. secret) then
                        return true;
                    else
                        onMessage("failed to verify integrity.");
                        return false;
                    end    
                else
                    return true;
                end
            else
                onMessage("key is invalid.");
                return false;
            end
        else
            if fStringSub(decoded.message, 1, 27) == "unique constraint violation" then
                onMessage("you already have an active key, please wait for it to expire before redeeming it.");
                return false;
            else
                onMessage(decoded.message);
                return false;
            end
        end
    elseif response.StatusCode == 429 then
        onMessage("you are being rate limited, please wait 20 seconds and try again.");
        return false;
    else
        onMessage("server returned an invalid status code, please try again later.");
        return false; 
    end
end

--!optimize 2
local verifyKey = function(key)
    if requestSending == true then
        onMessage("a request is already being sent, please slow down.");
        return false;
    else
        requestSending = true;
    end

    local nonce = generateNonce();
    local endpoint = host .. "/public/whitelist/" .. fToString(service) .. "?identifier=" .. lDigest(fGetHwid()) .. "&key=" .. key;

    if useNonce then
        endpoint = endpoint .. "&nonce=" .. nonce;
    end

    local response = fRequest({
        Url = endpoint,
        Method = "GET",
    });

    requestSending = false;

    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);

        if decoded.success == true then
            if decoded.data.valid == true then
                if useNonce then
                    if decoded.data.hash == lDigest("true" .. "-" .. nonce .. "-" .. secret) then
                        return true;
                    else
                        onMessage("failed to verify integrity.");
                        return false;
                    end
                else
                    return true;
                end
            else
                if fStringSub(key, 1, 4) == "KEY_" then
                    return redeemKey(key);
                else
                    onMessage("key is invalid.");
                    return false;
                end
            end
        else
            onMessage(decoded.message);
            return false;
        end
    elseif response.StatusCode == 429 then
        onMessage("you are being rate limited, please wait 20 seconds and try again.");
        return false;
    else
        onMessage("server returned an invalid status code, please try again later.");
        return false;
    end
end

--!optimize 2
local getFlag = function(name)
    local nonce = generateNonce();
    local endpoint = host .. "/public/flag/" .. fToString(service) .. "?name=" .. name;

    if useNonce then
        endpoint = endpoint .. "&nonce=" .. nonce;
    end

    local response = fRequest({
        Url = endpoint,
        Method = "GET",
    });

    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);

        if decoded.success == true then
            if useNonce then
                if decoded.data.hash == lDigest(fToString(decoded.data.value) .. "-" .. nonce .. "-" .. secret) then
                    return decoded.data.value;
                else
                    onMessage("failed to verify integrity.");
                    return nil;
                end
            else
                return decoded.data.value;
            end
        else
            onMessage(decoded.message);
            return nil;
        end
    else
        return nil;
    end
end
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
--! platoboost usage documentation
-- copyLink() -> string
-- verifyKey(key: string) -> boolean
-- getFlag(name: string) -> boolean, string | boolean | number

-- use copyLink() to copy a link to the clipboard, in which the user will paste it into their browser and complete the keysystem.
-- use verifyKey(key) to verify a key, this will return a boolean value, true means the key was valid, false means it is invalid.
-- use getFlag(name) to get a flag from the server, this will return nil if an error occurs, if no error occurs, the value configured in the platoboost dashboard will be returned.

-- IMPORTANT: onMessage is a callback, it will be called upon status update, use it to provide information to user.
-- EXAMPLE: 
--[[
onMessage = function(message)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Platoboost status",
        Text = message
    })
end
]]--

-- NOTE: PLACE THIS ENTIRE SCRIPT AT THE TOP OF YOUR SCRIPT, ADD THE LOGIC, THEN OBFUSCATE YOUR SCRIPT.

--! example usage
--[[
copyButton.MouseButton1Click:Connect(function()
    copyLink();
end)

verifyButton.MouseButton1Click:Connect(function()
    local key = keyBox.Text;
    local success = verifyKey(key);

    if success then
        print("key is valid.");
    else
        print("key is invalid.");
    end
end)

local flag = getFlag("example_flag");
if flag ~= nil then
    print("flag value: " .. flag);
else
    print("failed to get flag.");
end
]]--
-------------------------------------------------------------------------------

-- Override the onMessage callback to show status updates
onMessage = function(message)
    print("[Platoboost]", message)
end

-- Save Key System
local function saveKey(key)
    local success, err = pcall(function()
        -- Create folder if it doesn't exist
        if not isfolder("TadHub_SaveKey") then
            makefolder("TadHub_SaveKey")
        end
        
        -- Save key to file
        writefile("TadHub_SaveKey/saved_key.txt", key)
        print("Key saved successfully!")
    end)
    
    if not success then
        print("Failed to save key:", err)
    end
end

local function loadSavedKey()
    if isfolder("TadHub_SaveKey") and isfile("TadHub_SaveKey/saved_key.txt") then
        local success, key = pcall(function()
            return readfile("TadHub_SaveKey/saved_key.txt")
        end)
        
        if success and key and key ~= "" then
            return key
        end
    end
    return nil
end

local function deleteSavedKey()
    if isfile("TadHub_SaveKey/saved_key.txt") then
        delfile("TadHub_SaveKey/saved_key.txt")
        print("Saved key deleted!")
    end
end

-- Your main script logic here
local function mainScript()
    print("✅ Authentication successful! Running main script...")
    
    -- Add your script functionality here
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    
    print("🎮 Welcome, " .. player.Name .. "!")
    
    -- Example: Get flags from Platoboost
    local walkSpeedFlag = getFlag("walkspeed")
    if walkSpeedFlag then
        print("🚀 Walk speed flag:", walkSpeedFlag)
        -- Apply walk speed if it's a number
        if typeof(walkSpeedFlag) == "number" and player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = walkSpeedFlag
        end
    end
    
    local jumpPowerFlag = getFlag("jumppower")
    if jumpPowerFlag then
        print("🦘 Jump power flag:", jumpPowerFlag)
        -- Apply jump power if it's a number
        if typeof(jumpPowerFlag) == "number" and player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.JumpPower = jumpPowerFlag
        end
    end
    
    loadstring(game:HttpGet("https://get.nathub.xyz/loader"))()

    -- Example features you can add:
    -- - ESP (Extra Sensory Perception)
    -- - Auto-aim
    -- - Speed hacks
    -- - Fly scripts
    -- - Teleportation
    -- - Auto-farming
    
    print("🔥 Main script loaded successfully!")
end

-- Notification system
local notificationQueue = {}
local activeNotifications = {}

local function createNotification(title, message, notificationType, duration)
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    
    duration = duration or 4
    
    -- Create notification container if it doesn't exist
    local notificationContainer = playerGui:FindFirstChild("PlatoNotifications")
    if not notificationContainer then
        notificationContainer = Instance.new("ScreenGui")
        notificationContainer.Name = "PlatoNotifications"
        notificationContainer.ResetOnSpawn = false
        notificationContainer.DisplayOrder = 1
        notificationContainer.Parent = playerGui
    end
    
    -- Calculate position for new notification
    local yOffset = 20
    for _, notification in pairs(activeNotifications) do
        if notification and notification.Parent then
            yOffset = yOffset + 80
        end
    end
    
    -- Create notification frame
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(0, 320, 0, 70)
    notification.Position = UDim2.new(1, 10, 0, yOffset)
    notification.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    notification.BorderSizePixel = 0
    notification.Parent = notificationContainer
    
    -- Add to active notifications
    table.insert(activeNotifications, notification)
    
    -- Create gradient background
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 25)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 15))
    }
    gradient.Rotation = 45
    gradient.Parent = notification
    
    -- Corner radius
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = notification
    
    -- Stroke effect
    local stroke = Instance.new("UIStroke")
    stroke.Color = notificationType == "success" and Color3.fromRGB(46, 204, 113) or
                  notificationType == "error" and Color3.fromRGB(231, 76, 60) or
                  notificationType == "warning" and Color3.fromRGB(241, 196, 15) or
                  Color3.fromRGB(52, 152, 219)
    stroke.Thickness = 2
    stroke.Transparency = 0.3
    stroke.Parent = notification
    
    -- Left accent bar
    local accent = Instance.new("Frame")
    accent.Size = UDim2.new(0, 4, 1, 0)
    accent.Position = UDim2.new(0, 0, 0, 0)
    accent.BackgroundColor3 = stroke.Color
    accent.BorderSizePixel = 0
    accent.Parent = notification
    
    local accentCorner = Instance.new("UICorner")
    accentCorner.CornerRadius = UDim.new(0, 8)
    accentCorner.Parent = accent
    
    -- Icon
    local icon = Instance.new("TextLabel")
    icon.Size = UDim2.new(0, 30, 0, 30)
    icon.Position = UDim2.new(0, 15, 0, 10)
    icon.BackgroundTransparency = 1
    icon.Text = notificationType == "success" and "✅" or
               notificationType == "error" and "❌" or
               notificationType == "warning" and "⚠️" or "ℹ️"
    icon.TextColor3 = Color3.fromRGB(255, 255, 255)
    icon.TextSize = 18
    icon.Font = Enum.Font.GothamBold
    icon.Parent = notification
    
    -- Title
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -90, 0, 25)
    titleLabel.Position = UDim2.new(0, 50, 0, 8)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 14
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = notification
    
    -- Message
    local messageLabel = Instance.new("TextLabel")
    messageLabel.Size = UDim2.new(1, -90, 0, 20)
    messageLabel.Position = UDim2.new(0, 50, 0, 30)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = message
    messageLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
    messageLabel.TextSize = 11
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.Parent = notification
    
    -- Close button
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 20, 0, 20)
    closeButton.Position = UDim2.new(1, -25, 0, 5)
    closeButton.BackgroundTransparency = 1
    closeButton.Text = "×"
    closeButton.TextColor3 = Color3.fromRGB(150, 150, 150)
    closeButton.TextSize = 16
    closeButton.Font = Enum.Font.GothamBold
    closeButton.Parent = notification
    
    -- Progress bar
    local progressBg = Instance.new("Frame")
    progressBg.Size = UDim2.new(1, -20, 0, 2)
    progressBg.Position = UDim2.new(0, 10, 1, -8)
    progressBg.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    progressBg.BorderSizePixel = 0
    progressBg.Parent = notification
    
    local progressCorner = Instance.new("UICorner")
    progressCorner.CornerRadius = UDim.new(0, 1)
    progressCorner.Parent = progressBg
    
    local progressBar = Instance.new("Frame")
    progressBar.Size = UDim2.new(1, 0, 1, 0)
    progressBar.Position = UDim2.new(0, 0, 0, 0)
    progressBar.BackgroundColor3 = stroke.Color
    progressBar.BorderSizePixel = 0
    progressBar.Parent = progressBg
    
    local progressBarCorner = Instance.new("UICorner")
    progressBarCorner.CornerRadius = UDim.new(0, 1)
    progressBarCorner.Parent = progressBar
    
    -- Animations
    local slideIn = TweenService:Create(
        notification,
        TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
        {Position = UDim2.new(1, -330, 0, yOffset)}
    )
    
    local fadeOut = TweenService:Create(
        notification,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {BackgroundTransparency = 1}
    )
    
    local slideOut = TweenService:Create(
        notification,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Position = UDim2.new(1, 10, 0, yOffset)}
    )
    
    local progressTween = TweenService:Create(
        progressBar,
        TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
        {Size = UDim2.new(0, 0, 1, 0)}
    )
    
    -- Close function
    local function closeNotification()
        -- Remove from active notifications
        for i, notif in pairs(activeNotifications) do
            if notif == notification then
                table.remove(activeNotifications, i)
                break
            end
        end
        
        slideOut:Play()
        fadeOut:Play()
        
        fadeOut.Completed:Connect(function()
            notification:Destroy()
            
            -- Reposition remaining notifications
            local newYOffset = 20
            for _, notif in pairs(activeNotifications) do
                if notif and notif.Parent then
                    local repositionTween = TweenService:Create(
                        notif,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {Position = UDim2.new(1, -330, 0, newYOffset)}
                    )
                    repositionTween:Play()
                    newYOffset = newYOffset + 80
                end
            end
        end)
    end
    
    -- Events
    closeButton.MouseButton1Click:Connect(closeNotification)
    
    -- Auto close timer
    task.spawn(function()
        progressTween:Play()
        task.wait(duration)
        closeNotification()
    end)
    
    -- Animate in
    slideIn:Play()
end

-- Create ultra-modern GUI for key verification
local function createKeyGUI()
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")
    local UserInputService = game:GetService("UserInputService")
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    -- Remove existing GUI if it exists
    local existingGui = playerGui:FindFirstChild("PlatoboostGUI")
    if existingGui then
        existingGui:Destroy()
    end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PlatoboostGUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    -- Create camera blur effect instead of frame background
    local camera = workspace.CurrentCamera
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 15
    blurEffect.Parent = camera

    -- Responsive sizing based on screen size
    local screenSize = camera.ViewportSize
    local isMobile = screenSize.X < 800
    
    local frameWidth = isMobile and 320 or 400
    local frameHeight = isMobile and 350 or 320

    -- Main frame with glassmorphism effect
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, frameWidth, 0, frameHeight)
    frame.Position = UDim2.new(0.5, -frameWidth/2, 0.5, -frameHeight/2)
    frame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    frame.BackgroundTransparency = 0.1
    frame.BorderSizePixel = 0
    frame.Parent = screenGui

    -- Glass effect gradient
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 35)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(15, 15, 25)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 20))
    }
    gradient.Rotation = 135
    gradient.Parent = frame

    -- Frame corner
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = frame

    -- Neon border effect
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(0, 255, 150)
    stroke.Thickness = 2
    stroke.Transparency = 0.2
    stroke.Parent = frame

    -- Animated border glow
    local glowTween = TweenService:Create(
        stroke,
        TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),
        {Transparency = 0.8}
    )
    glowTween:Play()

    -- Header section
    local headerFrame = Instance.new("Frame")
    headerFrame.Size = UDim2.new(1, 0, 0, 80)
    headerFrame.Position = UDim2.new(0, 0, 0, 0)
    headerFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    headerFrame.BackgroundTransparency = 0.3
    headerFrame.BorderSizePixel = 0
    headerFrame.Parent = frame

    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 20)
    headerCorner.Parent = headerFrame

    -- Header gradient
    local headerGradient = Instance.new("UIGradient")
    headerGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 255, 150)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 150, 255))
    }
    headerGradient.Rotation = 45
    headerGradient.Transparency = NumberSequence.new(0.7)
    headerGradient.Parent = headerFrame

    -- Logo/Icon
    local logo = Instance.new("TextLabel")
    logo.Size = UDim2.new(0, 40, 0, 40)
    logo.Position = UDim2.new(0, 20, 0, 20)
    logo.BackgroundColor3 = Color3.fromRGB(0, 255, 150)
    logo.BorderSizePixel = 0
    logo.Text = "🛡️"
    logo.TextColor3 = Color3.fromRGB(255, 255, 255)
    logo.TextSize = 24
    logo.Font = Enum.Font.GothamBold
    logo.Parent = headerFrame

    local logoCorner = Instance.new("UICorner")
    logoCorner.CornerRadius = UDim.new(0, 8)
    logoCorner.Parent = logo

    -- Title
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -80, 0, 30)
    title.Position = UDim2.new(0, 70, 0, 15)
    title.BackgroundTransparency = 1
    title.Text = "PLATOBOOST"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = isMobile and 18 or 22
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = headerFrame

    -- Subtitle
    local subtitle = Instance.new("TextLabel")
    subtitle.Size = UDim2.new(1, -80, 0, 20)
    subtitle.Position = UDim2.new(0, 70, 0, 40)
    subtitle.BackgroundTransparency = 1
    subtitle.Text = "Advanced Security System"
    subtitle.TextColor3 = Color3.fromRGB(150, 255, 200)
    subtitle.TextSize = isMobile and 10 or 12
    subtitle.Font = Enum.Font.Gotham
    subtitle.TextXAlignment = Enum.TextXAlignment.Left
    subtitle.Parent = headerFrame

    -- Divider line
    local divider = Instance.new("Frame")
    divider.Size = UDim2.new(1, -40, 0, 1)
    divider.Position = UDim2.new(0, 20, 0, 90)
    divider.BackgroundColor3 = Color3.fromRGB(0, 255, 150)
    divider.BackgroundTransparency = 0.5
    divider.BorderSizePixel = 0
    divider.Parent = frame

    -- Content area
    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, -40, 1, -110)
    contentFrame.Position = UDim2.new(0, 20, 0, 100)
    contentFrame.BackgroundTransparency = 1
    contentFrame.BorderSizePixel = 0
    contentFrame.Parent = frame

    -- Status indicator
    local statusFrame = Instance.new("Frame")
    statusFrame.Size = UDim2.new(1, 0, 0, 30)
    statusFrame.Position = UDim2.new(0, 0, 0, 10)
    statusFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    statusFrame.BackgroundTransparency = 0.3
    statusFrame.BorderSizePixel = 0
    statusFrame.Parent = contentFrame

    local statusCorner = Instance.new("UICorner")
    statusCorner.CornerRadius = UDim.new(0, 6)
    statusCorner.Parent = statusFrame

    local statusIcon = Instance.new("TextLabel")
    statusIcon.Size = UDim2.new(0, 20, 1, 0)
    statusIcon.Position = UDim2.new(0, 10, 0, 0)
    statusIcon.BackgroundTransparency = 1
    statusIcon.Text = "●"
    statusIcon.TextColor3 = Color3.fromRGB(0, 255, 150)
    statusIcon.TextSize = 16
    statusIcon.Font = Enum.Font.GothamBold
    statusIcon.Parent = statusFrame

    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, -40, 1, 0)
    statusLabel.Position = UDim2.new(0, 35, 0, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "SYSTEM READY"
    statusLabel.TextColor3 = Color3.fromRGB(200, 255, 220)
    statusLabel.TextSize = isMobile and 10 or 11
    statusLabel.Font = Enum.Font.GothamBold
    statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    statusLabel.Parent = statusFrame

    -- Key input section
    local inputLabel = Instance.new("TextLabel")
    inputLabel.Size = UDim2.new(1, 0, 0, 20)
    inputLabel.Position = UDim2.new(0, 0, 0, 55)
    inputLabel.BackgroundTransparency = 1
    inputLabel.Text = "SECURITY KEY"
    inputLabel.TextColor3 = Color3.fromRGB(150, 255, 200)
    inputLabel.TextSize = isMobile and 11 or 12
    inputLabel.Font = Enum.Font.GothamBold
    inputLabel.TextXAlignment = Enum.TextXAlignment.Left
    inputLabel.Parent = contentFrame

    local keyInput = Instance.new("TextBox")
    keyInput.Size = UDim2.new(1, 0, 0, isMobile and 40 or 45)
    keyInput.Position = UDim2.new(0, 0, 0, 80)
    keyInput.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    keyInput.BackgroundTransparency = 0.2
    keyInput.BorderSizePixel = 0
    keyInput.PlaceholderText = "Enter your authentication key..."
    keyInput.PlaceholderColor3 = Color3.fromRGB(100, 150, 120)
    keyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    keyInput.TextSize = isMobile and 13 or 14
    keyInput.Font = Enum.Font.Gotham
    keyInput.ClearTextOnFocus = false
    keyInput.Parent = contentFrame

    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 8)
    inputCorner.Parent = keyInput

    local inputStroke = Instance.new("UIStroke")
    inputStroke.Color = Color3.fromRGB(0, 255, 150)
    inputStroke.Thickness = 1
    inputStroke.Transparency = 0.7
    inputStroke.Parent = keyInput

    -- Input focus effects
    keyInput.Focused:Connect(function()
        local focusTween = TweenService:Create(
            inputStroke,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 0.2, Thickness = 2}
        )
        focusTween:Play()
    end)

    keyInput.FocusLost:Connect(function()
        local unfocusTween = TweenService:Create(
            inputStroke,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 0.7, Thickness = 1}
        )
        unfocusTween:Play()
    end)

    -- Button section
    local buttonY = isMobile and 140 or 135
    local buttonHeight = isMobile and 40 or 45

    -- Copy link button
    local copyButton = Instance.new("TextButton")
    copyButton.Size = UDim2.new(0.48, 0, 0, buttonHeight)
    copyButton.Position = UDim2.new(0, 0, 0, buttonY)
    copyButton.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    copyButton.BorderSizePixel = 0
    copyButton.Text = "🔗 GET KEY"
    copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    copyButton.TextSize = isMobile and 12 or 14
    copyButton.Font = Enum.Font.GothamBold
    copyButton.Parent = contentFrame

    local copyCorner = Instance.new("UICorner")
    copyCorner.CornerRadius = UDim.new(0, 8)
    copyCorner.Parent = copyButton

    -- Verify button
    local verifyButton = Instance.new("TextButton")
    verifyButton.Size = UDim2.new(0.48, 0, 0, buttonHeight)
    verifyButton.Position = UDim2.new(0.52, 0, 0, buttonY)
    verifyButton.BackgroundColor3 = Color3.fromRGB(0, 255, 150)
    verifyButton.BorderSizePixel = 0
    verifyButton.Text = "⚡ VERIFY"
    verifyButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    verifyButton.TextSize = isMobile and 12 or 14
    verifyButton.Font = Enum.Font.GothamBold
    verifyButton.Parent = contentFrame

    local verifyCorner = Instance.new("UICorner")
    verifyCorner.CornerRadius = UDim.new(0, 8)
    verifyCorner.Parent = verifyButton

    -- Button hover effects
    local function createButtonHoverEffect(button, hoverColor, normalColor)
        button.MouseEnter:Connect(function()
            local hoverTween = TweenService:Create(
                button,
                TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {BackgroundColor3 = hoverColor, Size = button.Size + UDim2.new(0, 2, 0, 2)}
            )
            hoverTween:Play()
        end)
        
        button.MouseLeave:Connect(function()
            local leaveTween = TweenService:Create(
                button,
                TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {BackgroundColor3 = normalColor, Size = button.Size - UDim2.new(0, 2, 0, 2)}
            )
            leaveTween:Play()
        end)
    end

    createButtonHoverEffect(copyButton, Color3.fromRGB(0, 170, 255), Color3.fromRGB(0, 150, 255))
    createButtonHoverEffect(verifyButton, Color3.fromRGB(50, 255, 170), Color3.fromRGB(0, 255, 150))

    -- Update status function
    local function updateStatus(message, color, icon)
        statusLabel.Text = message
        statusLabel.TextColor3 = color
        statusIcon.TextColor3 = color
        
        if icon then
            statusIcon.Text = icon
        end
        
        local statusTween = TweenService:Create(
            statusFrame,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = Color3.new(color.R * 0.1, color.G * 0.1, color.B * 0.1)}
        )
        statusTween:Play()
    end

    -- Copy button event
    copyButton.MouseButton1Click:Connect(function()
        copyLink()
        updateStatus("LINK COPIED TO CLIPBOARD", Color3.fromRGB(0, 255, 150), "✓")
        createNotification("Success", "Key link copied to clipboard!", "success", 3)
        
        task.spawn(function()
            wait(3)
            updateStatus("SYSTEM READY", Color3.fromRGB(0, 255, 150), "●")
        end)
    end)

    -- Verify button event
    verifyButton.MouseButton1Click:Connect(function()
        local key = keyInput.Text
        if key == "" then
            updateStatus("KEY REQUIRED", Color3.fromRGB(255, 100, 100), "!")
            createNotification("Error", "Please enter your authentication key", "error", 4)
            return
        end
        
        updateStatus("VERIFYING KEY...", Color3.fromRGB(255, 200, 0), "⟳")
        verifyButton.Text = "⏳ VERIFYING..."
        copyButton.Visible = false
        
        createNotification("Info", "Verifying your key with server...", "info", 3)
        
        task.spawn(function()
            local success = verifyKey(key)
            
            if success then
                updateStatus("VERIFICATION SUCCESS", Color3.fromRGB(0, 255, 150), "✓")
                verifyButton.Text = "✅ VERIFIED!"
                
                -- Save the key for future use
                saveKey(key)
                
                createNotification("Success", "Authentication successful! Key saved for future use.", "success", 4)
                
                -- Close animation
                local closeTween = TweenService:Create(
                    frame,
                    TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In),
                    {Size = UDim2.new(0, 0, 0, 0)}
                )
                
                local blurFadeTween = TweenService:Create(
                    blurEffect,
                    TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {Size = 0}
                )
                
                closeTween:Play()
                blurFadeTween:Play()
                
                closeTween.Completed:Connect(function()
                    blurEffect:Destroy()
                    screenGui:Destroy()
                    mainScript()
                end)
            else
                updateStatus("VERIFICATION FAILED", Color3.fromRGB(255, 100, 100), "✗")
                verifyButton.Text = "⚡ VERIFY"
                copyButton.Visible = true
                
                -- Delete saved key if verification failed
                deleteSavedKey()
                
                createNotification("Error", "Invalid key! Please check and try again.", "error", 5)
            end
        end)
    end)

    -- Entrance animation
    frame.Size = UDim2.new(0, 0, 0, 0)
    blurEffect.Size = 0
    
    local openTween = TweenService:Create(
        frame,
        TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
        {Size = UDim2.new(0, frameWidth, 0, frameHeight)}
    )
    
    local blurTweenIn = TweenService:Create(
        blurEffect,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Size = 15}
    )
    
    blurTweenIn:Play()
    task.wait(0.1)
    openTween:Play()
end

-- Auto-verification system with loading animation
local function showLoadingScreen()
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    
    local loadingGui = Instance.new("ScreenGui")
    loadingGui.Name = "TadHubLoading"
    loadingGui.ResetOnSpawn = false
    loadingGui.Parent = playerGui
    
    -- Create camera blur effect for loading screen
    local camera = workspace.CurrentCamera
    local loadingBlur = Instance.new("BlurEffect")
    loadingBlur.Size = 10
    loadingBlur.Parent = camera
    
    -- Loading frame
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 120)
    frame.Position = UDim2.new(0.5, -150, 0.5, -60)
    frame.BackgroundTransparency = 1
    frame.BorderSizePixel = 0
    frame.Parent = loadingGui
    
    -- Title
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundTransparency = 1
    title.Text = "🛡️ TADHUB SECURITY"
    title.TextColor3 = Color3.fromRGB(0, 255, 150)
    title.TextSize = 20
    title.Font = Enum.Font.GothamBold
    title.Parent = frame
    
    -- Status
    local status = Instance.new("TextLabel")
    status.Size = UDim2.new(1, 0, 0, 25)
    status.Position = UDim2.new(0, 0, 0, 35)
    status.BackgroundTransparency = 1
    status.Text = "Verifying saved authentication..."
    status.TextColor3 = Color3.fromRGB(150, 255, 200)
    status.TextSize = 14
    status.Font = Enum.Font.Gotham
    status.Parent = frame
    
    -- Loading bar background
    local loadingBg = Instance.new("Frame")
    loadingBg.Size = UDim2.new(1, 0, 0, 4)
    loadingBg.Position = UDim2.new(0, 0, 0, 75)
    loadingBg.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    loadingBg.BorderSizePixel = 0
    loadingBg.Parent = frame
    
    local loadingCorner = Instance.new("UICorner")
    loadingCorner.CornerRadius = UDim.new(0, 2)
    loadingCorner.Parent = loadingBg
    
    -- Loading bar
    local loadingBar = Instance.new("Frame")
    loadingBar.Size = UDim2.new(0, 0, 1, 0)
    loadingBar.BackgroundColor3 = Color3.fromRGB(0, 255, 150)
    loadingBar.BorderSizePixel = 0
    loadingBar.Parent = loadingBg
    
    local barCorner = Instance.new("UICorner")
    barCorner.CornerRadius = UDim.new(0, 2)
    barCorner.Parent = loadingBar
    
    -- Animate loading bar
    local loadTween = TweenService:Create(
        loadingBar,
        TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Size = UDim2.new(1, 0, 1, 0)}
    )
    loadTween:Play()
    
    return loadingGui, status, loadingBlur
end

local function initializeScript()
    local savedKey = loadSavedKey()
    
    if savedKey then
        print("🔍 Found saved key, verifying...")
        
        -- Show loading screen
        local loadingGui, statusLabel, loadingBlur = showLoadingScreen()
        createNotification("TadHub", "Auto-verifying saved key...", "info", 3)
        
        task.spawn(function()
            task.wait(1) -- Show loading animation
            
            local success = verifyKey(savedKey)
            
            if success then
                print("✅ Saved key is valid! Loading script...")
                statusLabel.Text = "Authentication successful! Loading..."
                statusLabel.TextColor3 = Color3.fromRGB(0, 255, 150)
                
                createNotification("TadHub", "Key verified! Loading main script...", "success", 4)
                
                task.wait(1)
                loadingBlur:Destroy()
                loadingGui:Destroy()
                mainScript()
            else
                print("❌ Saved key expired or invalid, showing GUI...")
                statusLabel.Text = "Key expired. Opening key system..."
                statusLabel.TextColor3 = Color3.fromRGB(255, 150, 150)
                
                createNotification("TadHub", "Key expired. Please enter a new key.", "warning", 4)
                
                -- Delete expired key
                deleteSavedKey()
                
                task.wait(1.5)
                loadingBlur:Destroy()
                loadingGui:Destroy()
                createKeyGUI()
            end
        end)
    else
        print("🔑 No saved key found, showing GUI...")
        createNotification("TadHub", "Welcome! Please enter your key to continue.", "info", 4)
        createKeyGUI()
    end
end

-- Initialize the script
initializeScript()

-- Note: Make sure to configure your Platoboost service settings:
-- 1. Update the 'service' variable with your service ID
-- 2. Update the 'secret' variable with your service secret
-- 3. Configure flags in your Platoboost dashboard if needed
